import java.util.ArrayList;
import java.util.Arrays;
import java.util.LinkedList;
import java.util.List;
import java.util.Queue;

class Solution {
    public int[][] merge(int[][] intervals) {
        List<int[]> result = new ArrayList<>();

        Arrays.sort(intervals, (x, y) -> x[0] - y[0]);
        Queue<int[]> queue = new LinkedList<>();
        for (int i = 0; i < intervals.length; i++) {
            queue.add(intervals[i]);
        }

        int[] current = queue.poll();
        while (!queue.isEmpty()) {
            int[] next = queue.poll();
            if (current[1] >= next[0]) {
                current[1] = Math.max(current[1], next[1]);
            } else {
                result.add(current);
                current = next;
            }
        }

        result.add(current);
        return result.stream().toArray(int[][]::new);
    }
}