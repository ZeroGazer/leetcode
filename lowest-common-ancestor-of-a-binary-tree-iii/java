/*
// Definition for a Node.
class Node {
    public int val;
    public Node left;
    public Node right;
    public Node parent;
};
*/

class Solution {
    public Node lowestCommonAncestor(Node p, Node q) {
        int pDepth = getDepth(p), qDepth = getDepth(q);
        while (pDepth < qDepth) {
            qDepth--;
            q = q.parent;
        }
        while (pDepth > qDepth) {
            pDepth--;
            p = p.parent;
        }
        while (p != q) {
            p = p.parent;
            q = q.parent;
        }
        return p;
    }

    private int getDepth(Node n) {
        int depth = 0;
        while (n.parent != null) {
            depth++;
            n = n.parent;
        }
        return depth;
    }
}