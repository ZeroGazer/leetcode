import java.util.ArrayList;
import java.util.List;

class Solution {
    public List<Integer> findClosestElements(int[] arr, int k, int x) {
        List<Integer> result = new ArrayList<>();
        
        int mid = findMid(arr, x);
        
        System.out.println(mid);
        int left = mid, right = mid + 1;
        int count = 0;
        while (count < k && left > -1 && right < arr.length) {
            if (Math.abs(arr[left] - x) <= Math.abs(arr[right] - x)) {
                left--;
            } else {
                right++;
            }
            count++;
        }
        while (count < k && left > -1) {
            left--;
            count++;
        }
        while (count < k && right < arr.length) {
            right++;
            count++;
        }
        for (int i = left + 1; i < right; i++) {
            result.add(arr[i]);
        }
        return result;
    }
    
    private int findMid(int[] arr, int x) {
        int left = 0, right = arr.length - 1;
        while (left + 1 < right) {
            int mid = (right - left) / 2 + left;
            if (arr[mid] == x) {
              return mid;
            } else if (arr[mid] < x) {
                left = mid;
            } else {
                right = mid;
            }
        }
        return Math.abs(arr[left] - x) <= Math.abs(arr[right] - x) ? left : right;
    }
}