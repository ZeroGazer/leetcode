class Solution {
    public String[] reorderLogFiles(String[] logs) {
        List<LetterLog> letterLogs = new ArrayList<>();
        List<String> digitLogs = new ArrayList<>();
        for (String log : logs) {
            char c = log.charAt(log.indexOf(" ") + 1);
            if ('0' <= c && c <= '9') {
                digitLogs.add(log);
            } else {
                letterLogs.add(new LetterLog(log));
            }
        }
        Collections.sort(letterLogs);
        String[] result = new String[logs.length];
        int index = 0;
        for (LetterLog log : letterLogs) {
            result[index] = log.toString();
            index++;
        }
        for (String log : digitLogs) {
            result[index] = log;
            index++;
        }
        return result;
    }
}

class LetterLog implements Comparable<LetterLog> {
    private String id;
    private String body;

    public LetterLog(String log) {
        int index = log.indexOf(" ");
        id = log.substring(0, index);
        body = log.substring(index + 1);
    }

    @Override
    public int compareTo(LetterLog o) {
        if (body.compareTo(o.body) == 0) {
            return id.compareTo(o.id);
        }
        return body.compareTo(o.body);
    }

    @Override
    public String toString() {
        return id + " " + body;
    }
}