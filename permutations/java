class Solution {
    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> paths = new ArrayList<>();
        List<Integer> path = new ArrayList<>();
        permute(nums, paths, path);
        return paths;
    }

    private void permute(int[] nums, List<List<Integer>> paths, List<Integer> path) {
        if (path.size() == nums.length) {
            paths.add(new ArrayList<Integer>(path));
            return;
        }
        for (int num : nums) {
            if (!path.contains(num)) {
                path.add(num);
                permute(nums, paths, path);
                path.removeLast();
            }
        }
    }
}