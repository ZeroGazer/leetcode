import java.util.Comparator;
import java.util.PriorityQueue;

class Solution {
    public int furthestBuilding(int[] heights, int bricks, int ladders) {
        PriorityQueue<Integer> pq = new PriorityQueue<>(Comparator.reverseOrder());
        int h = 0;
        while (h < heights.length - 1) {
            if (heights[h] < heights[h+1]) {
                int d = heights[h+1] - heights[h];
                if (d <= bricks) {
                    pq.add(d);
                    bricks -= d;
                } else {
                    if (ladders == 0) {
                        break;
                    }
                    ladders -= 1;
                    if (!pq.isEmpty()) {
                        if (d < pq.peek()) {
                            bricks += (pq.poll() - d);
                            pq.add(d);
                        }
                    }
                }
            }
            h++;
        }
        return h;
    }
}
