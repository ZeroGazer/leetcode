/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean twoSumBSTs(TreeNode root1, TreeNode root2, int target) {
        Set<Integer> s = new HashSet<>();
        Queue<TreeNode> q = new LinkedList<>();
        q.add(root1);
        while (!q.isEmpty()) {
            TreeNode curr = q.poll();
            if (curr == null) {
                continue;
            }
            s.add(target - curr.val);
            q.add(curr.left);
            q.add(curr.right);
        }
        q.add(root2);
        while (!q.isEmpty()) {
            TreeNode curr = q.poll();
            if (curr == null) {
                continue;
            }
            if (s.contains(curr.val)) {
                return true;
            }
            q.add(curr.left);
            q.add(curr.right);
        }
        return false;
    }
}