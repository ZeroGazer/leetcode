class Solution {
    public String removeDuplicates(String s, int k) {
        Stack<Character> stack = new Stack<>();
        Stack<Integer> freqStack = new Stack<>();
        int freq = 0;
        for (char c : s.toCharArray()) {
            if (stack.isEmpty()) {
                stack.push(c);
                ++freq;
            } else {
                if (stack.peek() == c) {
                    ++freq;
                    if (freq == k) {
                        for (int i = 0; i < k - 1; i++) {
                            stack.pop();
                        }
                        if (freqStack.isEmpty()) {
                            freq = 0;
                        } else {
                            freq = freqStack.pop();
                        }
                    } else {
                        stack.push(c);
                    }
                } else {
                    stack.push(c);
                    freqStack.push(freq);
                    freq = 1;
                }
            }
        }
        StringBuilder sb = new StringBuilder();
        while (!stack.isEmpty()) {
            sb.insert(0, stack.pop());
        }
        return sb.toString();
    }
}