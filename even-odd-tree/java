/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isEvenOddTree(TreeNode root) {
        Queue<TreeNode> queue = new LinkedList<>();
        queue.offer(root);
        int level = 0;
        while (!queue.isEmpty()) {
            int size = queue.size();
            Integer prev = null;
            for (int i = 0; i < size; i++) {
                TreeNode curr = queue.poll();
                if (level % 2 == 0) {
                        if (curr.val % 2 == 0) {
                            return false;
                        }
                    } else {
                        if (curr.val % 2 != 0) {
                            return false;
                        }
                    }
                if (prev != null) {
                    if (level % 2 == 0) {
                        if (prev >= curr.val) {
                            return false;
                        }
                    } else {
                        if (prev <= curr.val) {
                            return false;
                        }
                    }
                }
                prev = curr.val;
                if (curr.left != null) {
                    queue.offer(curr.left);
                }
                if (curr.right != null) {
                    queue.offer(curr.right);
                }
            }
            level++;
        }
        return true;
    }
}