class Solution {
    public int knightDialer(int n) {
        int[][] move = {
            {4, 6},
            {6, 8},
            {7, 9},
            {4, 8},
            {3, 9, 0},
            {},
            {1, 7, 0},
            {2, 6},
            {1, 3},
            {2, 4}
        };
        int mod = (int) 1e9 + 7;
        int[][] result = new int[n][10];
        Arrays.fill(result[0], 1);
        for (int i = 1; i < n; i++) {
            for (int j = 0; j < move.length; j++) {
                for (int k = 0; k < move[j].length; k++) {
                    result[i][move[j][k]] = (result[i][move[j][k]] + result[i-1][j]) % mod;
                }
            }
        }
        int sum = 0;
        for (int i = 0; i < 10; i++) {
            sum = (sum + result[n-1][i]) % mod;
        }
        return sum;
    }
}