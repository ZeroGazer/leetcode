class Solution {
    public int lengthOfLIS(int[] nums) {
        List<Integer> result = new ArrayList<>();
        result.add(nums[0]);
        for (int i = 1; i < nums.length; i++) {
            if (nums[i] > result.get(result.size() - 1)) {
                result.add(nums[i]);
            } else {
                result.set(search(result, nums[i]), nums[i]);
            }
        }
        return result.size();
    }

    private int search(List<Integer> list, int target) {
        int left = 0, right = list.size() - 1;
        while (left < right) {
            int middle = left + (right - left) / 2;
            if (list.get(middle) == target) {
                return middle;
            } else if (list.get(middle) < target) {
                left = middle + 1;
            } else {
                right = middle;
            }
        }
        return left;
    }
}