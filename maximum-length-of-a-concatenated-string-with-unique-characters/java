class Solution {
    public int maxLength(List<String> arr) {
        Map<Character, Integer> count = new HashMap();
        return dfs(arr, count, 0);
    }

    private int dfs(List<String> arr, Map<Character, Integer> count, int index) {
        for (int c : count.values()) {
            if (c > 1) {
                return 0;
            }
        }
        int max = count.size();
        for (int i = index; i < arr.size(); i++) {
            for (char c : arr.get(i).toCharArray()) {
                count.put(c, count.getOrDefault(c, 0) + 1);
            }
            max = Math.max(dfs(arr, count, i + 1), max);
            for (char c : arr.get(i).toCharArray()) {
                count.put(c, count.get(c) - 1);
                if (count.get(c) == 0) {
                    count.remove(c);
                }
            }
        }
        return max;
    }
}