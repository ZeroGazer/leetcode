class Solution {
    public int strangePrinter(String s) {
        s = deduplicate(s);
        Integer[][] memo = new Integer[s.length()][s.length()];
        return dp(0, s.length() - 1, s, memo);
    }

    private int dp(int start, int end, String s, Integer[][] memo) {
        if (start > end) {
            return 0;
        }
        if (memo[start][end] != null) {
            return memo[start][end];
        }
        int min = 1 + dp(start + 1, end, s, memo);
        for (int i = start + 1; i <= end; i++) {
            if (s.charAt(i) == s.charAt(start)) {
                min = Math.min(min, dp(start, i - 1, s, memo) + dp(i + 1, end, s, memo));
            }
        }
        return memo[start][end] = min;
    }

    private String deduplicate(String s) {
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < s.length(); i++) {
            char c = s.charAt(i);
            if (sb.length() == 0 || sb.charAt(sb.length() - 1) != c) {
                sb.append(c);
            }
        }
        return sb.toString();
    }
}