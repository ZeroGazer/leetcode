class Solution {
    public int[] sortArray(int[] nums) {
        int[] temp = new int[nums.length];
        sortArray(nums, 0, nums.length - 1, temp);
        return nums;
    }

    private void sortArray(int[] nums, int start, int end, int[] temp) {
        if (start >= end) {
            return;
        }
        int mid = start + (end - start) / 2;
        sortArray(nums, start, mid, temp);
        sortArray(nums, mid + 1, end, temp);
        int i = start, j = mid + 1, k = start;
        while (i <= mid && j <= end) {
            if (nums[i] <= nums[j]) {
                temp[k++] = nums[i++];
            } else {
                temp[k++] = nums[j++];
            }
        }
        while (i <= mid) {
            temp[k++] = nums[i++];
        }
        while (j <= end) {
            temp[k++] = nums[j++];
        }
        while (start <= end) {
            nums[start] = temp[start];
            start++;
        }
    }
}