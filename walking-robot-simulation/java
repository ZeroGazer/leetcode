class Solution {
    public int robotSim(int[] commands, int[][] obstacles) {
        Set<Pair<Integer, Integer>> ob = new HashSet<>();
        for (int[] obstacle : obstacles) {
            ob.add(new Pair<>(obstacle[0], obstacle[1]));
        }

        
        int max = 0;
        int direction = 0;
        int[] position = {0, 0};
        int[][] directions = {{0, 1}, {1, 0}, {0, -1}, {-1, 0}};
        for (int command : commands) {
            if (command == -1) {
                direction = (direction + 1) % 4;
            } else if (command == -2) {
                direction = (direction + 3) % 4;
            } else {
                for (int i = 0; i < command; i++) {
                    int newX = position[0] + directions[direction][0];
                    int newY = position[1] + directions[direction][1];
                    if (ob.contains(new Pair<>(newX, newY))) {
                        break;
                    }
                    position[0] = newX;
                    position[1] = newY;
                }
                max = Math.max(max, position[0] * position[0] + position[1] * position[1]);
            }
        }
        return max;
    }
}