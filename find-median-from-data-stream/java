import java.util.Comparator;
import java.util.PriorityQueue;

class MedianFinder {

    private int l1;
    private int l2;
    private final PriorityQueue<Integer> q1;
    private final PriorityQueue<Integer> q2;

    public MedianFinder() {
        this.l1 = 0;
        this.l2 = 0;
        this.q1 = new PriorityQueue<>(Comparator.reverseOrder());
        this.q2 = new PriorityQueue<>();
    }

    public void addNum(int num) {
        if (this.q1.isEmpty()) {
            this.q1.add(num);
            ++this.l1;
        } else if (this.q2.isEmpty()) {
            if (q1.peek() > num) {
                this.q2.add(this.q1.poll());
                this.q1.add(num);
            } else {
                this.q2.add(num);
            }
            ++this.l2;
        } else {
            int extra = num;
            if (num < this.q1.peek()) {
                this.q1.add(num);
                extra = this.q1.poll();
            } else if (num > this.q2.peek()) {
                this.q2.add(num);
                extra = this.q2.poll();
            }
            if (this.l1 <= this.l2) {
                this.q1.add(extra);
                this.l1++;
            } else {
                this.q2.add(extra);
                this.l2++;
            }
        }
    }

    public double findMedian() {
        if (this.l1 != this.l2) {
            return this.q1.peek();
        } else {
            return (this.q1.peek() + this.q2.peek()) / 2.0;
        }
    }
}

/**
 * Your MedianFinder object will be instantiated and called as such:
 * MedianFinder obj = new MedianFinder();
 * obj.addNum(num);
 * double param_2 = obj.findMedian();
 */