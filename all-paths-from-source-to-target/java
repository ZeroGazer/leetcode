class Solution {



    public List<List<Integer>> allPathsSourceTarget(int[][] graph) {
        List<List<Integer>> result = new ArrayList<>();
        List<Integer> path = new ArrayList<>();
        path.add(0);
        find(graph, path, result);

        return result;
    }

    private void find(int[][] graph, List<Integer> path, List<List<Integer>> result) {
        int e = path.get(path.size() - 1);
        if (e == graph.length - 1) {
            result.add(new ArrayList<Integer>(path));
        } else {
            for (int neighbour: graph[e]) {
                path.add(neighbour);
                find(graph, path, result);
                path.remove(path.size() - 1);
            }
        }
    }
}