class Solution {
    public List<Integer> minAvailableDuration(int[][] slots1, int[][] slots2, int duration) {
        Arrays.sort(slots1, Comparator.comparingInt(x -> x[0]));
        Arrays.sort(slots2, Comparator.comparingInt(x -> x[0]));
        int i = 0, j = 0;
        while (i < slots1.length && j < slots2.length) {
            int[] slot1 = slots1[i], slot2 = slots2[j];
            if (slot1[1] <= slot2[0]) {
                i++;
            } else if (slot2[1] <= slot1[0]) {
                j++;
            } else {
                int start = Math.max(slot1[0], slot2[0]);
                int end = Math.min(slot1[1], slot2[1]);
                if (end - start >= duration) {
                    return List.of(start, start + duration);
                } else if (slot1[1] <= slot2[1]) {
                    i++;
                } else if (slot2[1] <= slot1[1]) {
                    j++;
                }
            }
        }
        return new ArrayList<>();
    }
}