class Solution {

    private Map<Character, Integer> map = Map.of(
        'I', 1,
        'V', 5,
        'X', 10,
        'L', 50,
        'C', 100,
        'D', 500,
        'M', 1000
    );

    private Map<Character, Set<Character>> sub = Map.of(
        'I', Set.of('V', 'X'),
        'X', Set.of('L', 'C'),
        'C', Set.of('D', 'M')
    );

    public int romanToInt(String s) {
        int sum = 0;
        for (int i = 0; i < s.length(); i++) {
            char c = s.charAt(i);
            int curr = map.get(c);
            if (i < s.length() - 1 && sub.containsKey(c) && sub.get(c).contains(s.charAt(i + 1))) {
                curr = map.get(s.charAt(i + 1)) - curr;
                i++;
            }
            sum += curr;
        }
        return sum;
    }
}