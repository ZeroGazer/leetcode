class Solution {
    public List<Integer> diffWaysToCompute(String expression) {
        List<Integer> results = new ArrayList<>();

        if (expression.isEmpty()) {
            return results;
        }
        if (expression.length() == 1) {
            results.add(Integer.parseInt(expression));
            return results;
        }

        if (expression.length() == 2 && Character.isDigit(expression.charAt(0))) {
            results.add(Integer.parseInt(expression));
            return results;
        }

        for (int i = 0; i < expression.length(); i++) {
            if (Character.isDigit(expression.charAt(i))) {
                continue;
            }

            List<Integer> left = diffWaysToCompute(expression.substring(0, i));
            List<Integer> right = diffWaysToCompute(expression.substring(i + 1));

            for (int l : left) {
                for (int r : right) {
                    if (expression.charAt(i) == '+') {
                        results.add(l + r);
                    } else if (expression.charAt(i) == '-') {
                        results.add(l - r);
                    } else {
                        results.add(l * r);
                    }
                }
            }
        }

        return results;
    }
}