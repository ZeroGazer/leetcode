class Solution {
    public int findMaximizedCapital(int k, int w, int[] profits, int[] capital) {
        List<int[]> projects = new ArrayList<>();
        for (int i = 0; i < capital.length; i++) {
            projects.add(new int[] {profits[i], capital[i]});
        }
        projects.sort((o1, o2) -> Integer.compare(o1[1], o2[1]));
        Queue<int[]> pq = new PriorityQueue<>((o1, o2) -> -Integer.compare(o1[0], o2[0]));
        int index = 0;
        for (int i = 0; i < k; i++) {
            while (index < projects.size() && projects.get(index)[1] <= w) {
                pq.add(projects.get(index++));
            }
            if (pq.isEmpty()) {
                break;
            }
            w += pq.poll()[0];
        }
        return w;
    }
}