class Solution {

    public List<List<Integer>> allPathsSourceTarget(int[][] graph) {
        List<List<Integer>> result = new ArrayList<>();
        LinkedList<Integer> path = new LinkedList<>();
        path.add(0);
        Queue<LinkedList<Integer>> queue = new LinkedList<>();
        queue.add(path);
        while (!queue.isEmpty()) {
            LinkedList<Integer> currentPath = queue.poll();
            int currentNode = currentPath.getLast();

            if (currentNode == graph.length - 1) {
                result.add(new ArrayList<>(currentPath));
                continue;
            }

            for (int neighbour: graph[currentNode]) {
                LinkedList<Integer> newPath = new LinkedList<>(currentPath);
                newPath.addLast(neighbour);
                queue.add(newPath);
            }
        }

        return result;
    }
}