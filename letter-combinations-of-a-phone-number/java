class Solution {
    private Map<String, List<String>> map = Map.of(
        "2", List.of("a", "b", "c"),
        "3", List.of("d", "e", "f"),
        "4", List.of("g", "h", "i"),
        "5", List.of("j", "k", "l"),
        "6", List.of("m", "n", "o"),
        "7", List.of("p", "q", "r", "s"),
        "8", List.of("t", "u", "v"),
        "9", List.of("w", "x", "y", "z")
    );
    public List<String> letterCombinations(String digits) {
        if (digits.length() == 0) {
            return Collections.EMPTY_LIST;
        }
        if (digits.length() == 1) {
            return map.get(digits);
        }
        List<String> sub = letterCombinations(digits.substring(0, digits.length() - 1));
        List<String> result = new ArrayList<>();
        for (String s: map.get(digits.substring(digits.length() - 1))) {
            for (String ss: sub) {
                result.add(ss + s);
            }
        }
        return result;
    }
}