class Solution {
    public int minimumOperationsToWriteY(int[][] grid) {
        int[] counts = new int[3];
        for (int i = 0; i < grid.length; i++) {
            for (int j = 0; j < grid[i].length; j++) {
                counts[grid[i][j]]++;
            }
        }
        int middle = grid.length / 2;
        int[] ycounts = new int[3];
        for (int i = 0; i < middle; i++) {
            ycounts[grid[i][i]]++;
            counts[grid[i][i]]--;
            ycounts[grid[i][grid.length - i - 1]]++;
            counts[grid[i][grid.length - i - 1]]--;
        }
        for (int i = middle; i < grid.length; i++) {
            ycounts[grid[i][middle]]++;
            counts[grid[i][middle]]--;
        }
        int min = Integer.MAX_VALUE;
        min = Math.min(min, ycounts[1] + ycounts[2] + Math.min(counts[0] + counts[2], counts[0] + counts[1]));
        min = Math.min(min, ycounts[0] + ycounts[2] + Math.min(counts[1] + counts[2], counts[0] + counts[1]));
        min = Math.min(min, ycounts[0] + ycounts[1] + Math.min(counts[1] + counts[2], counts[0] + counts[2]));
        return min;
    }
}