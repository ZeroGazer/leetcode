class Solution {
    public String[] shortestSubstrings(String[] arr) {
        String[] answer = new String[arr.length];
        Set<String>[] sets = new Set[arr.length];
        for (int i = 0; i < arr.length; i++) {
            String s = arr[i];
            Set<String> set = new HashSet<>();
            for (int j = 0; j < s.length(); j++) {
                for (int k = j + 1; k <= s.length(); k++) {
                    String sub = s.substring(j, k);
                    set.add(sub);
                }
            }
            List<String> target = new ArrayList<>();
            for (String sub : set) {
                boolean found = false;
                for (int j = 0; j < arr.length; j++) {
                    if (i == j) {
                        continue;
                    }
                    if (arr[j].indexOf(sub) > -1) {
                        found = true;
                        break;
                    }
                }
                if (!found) {
                    target.add(sub);
                }
            }
            
            Collections.sort(target, (s1, s2) -> {
                if (s1.length() != s2.length()) {
                    return s1.length() - s2.length();
                } else { 
                    return s1.compareTo(s2);
                }
            });
            if (target.isEmpty()) {
                answer[i] = "";
            } else {
                answer[i] = target.get(0);
            }
        }
        return answer;
    }
}