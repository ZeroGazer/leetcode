/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {

    private TreeNode target;

    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
        search(root, p, q);
        return target;
    }

    private boolean search(TreeNode root, TreeNode p, TreeNode q) {
        if (root == null) {
            return false;
        }

        boolean isLeft = search(root.left, p, q);
        boolean isRight = search(root.right, p, q);
        boolean isThis = root.val == p.val || root.val == q.val;
        if (isLeft && isRight || isThis && (isLeft || isRight)) {
            target = root;
        }
        return isLeft || isRight || isThis;
    }
}