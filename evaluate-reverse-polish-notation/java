class Solution {
    public int evalRPN(String[] tokens) {
        Stack<Integer> stack = new Stack<>();
        for (int i = 0; i < tokens.length; i++) {
            String s = tokens[i];
            Integer operand2;
            Integer operand1;
            switch (s) {
                case "+":
                    operand2 = stack.pop();
                    operand1 = stack.pop();
                    stack.push(operand1 + operand2);
                    break;
                case "-":
                    operand2 = stack.pop();
                    operand1 = stack.pop();
                    stack.push(operand1 - operand2);
                    break;
                case "*":
                    operand2 = stack.pop();
                    operand1 = stack.pop();
                    stack.push(operand1 * operand2);
                    break;
                case "/":
                    operand2 = stack.pop();
                    operand1 = stack.pop();
                    stack.push(operand1 / operand2);
                    break;
                default:
                    stack.add(Integer.parseInt(tokens[i]));
            }
        }
        return stack.pop();
    }
}