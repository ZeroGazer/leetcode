class Solution {
    private int[][] DIRECTIONS = {{0, 1}, {1, 0}};
    public int[][] findFarmland(int[][] land) {
        Queue<int[]> queue = new LinkedList<>();
        List<int[]> results = new ArrayList<>();
        for (int i = 0; i < land.length; i++) {
            for (int j = 0; j < land[i].length; j++) {
                if (land[i][j] == 1) {
                    land[i][j] = 0;
                    queue.offer(new int[] {i, j});
                    int[] curr = null;
                    while (!queue.isEmpty()) {
                        curr = queue.poll();
                        for (int[] DIRECTION : DIRECTIONS) {
                            int[] next = {curr[0] + DIRECTION[0], curr[1] + DIRECTION[1]};
                            if (next[0] < land.length && next[1] < land[i].length) {
                                if (land[next[0]][next[1]] == 1) {
                                    land[next[0]][next[1]] = 0;
                                    queue.offer(next);
                                }
                            }
                        }
                    }
                    results.add(new int[] {i, j, curr[0], curr[1]});
                }
            }
        }
        return results.toArray(new int[0][0]);
    }
}