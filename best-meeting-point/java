class Solution {
    public int minTotalDistance(int[][] grid) {
        List<Integer> x = new ArrayList<>();
        List<Integer> y = new ArrayList<>();
        List<int[]> points = new ArrayList<>();
        for (int i = 0; i < grid.length; i++) {
            for (int j = 0; j < grid[i].length; j++) {
                if (grid[i][j] == 1) {
                    x.add(i);
                    y.add(j);
                    points.add(new int[] {i, j});
                }
            }
        }
        Collections.sort(x);
        Collections.sort(y);
        int mx = x.size() % 2 == 1 ? x.get(x.size() / 2) : (x.get(x.size() / 2 - 1) + x.get(x.size() / 2)) / 2;
        int my = y.size() % 2 == 1 ? y.get(y.size() / 2) : (y.get(y.size() / 2 - 1) + y.get(y.size() / 2)) / 2;
        int distance = 0;
        for (int[] point : points) {
            distance += Math.abs(point[0] - mx) + Math.abs(point[1] - my);
        }
        return distance;
    }
}