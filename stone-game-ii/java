class Solution {
    public int stoneGameII(int[] piles) {
        int[][] dp = new int[piles.length + 1][piles.length + 1];
        int[] suffixSum = new int[piles.length + 1];
        for (int i = piles.length - 1; i >= 0; i--) {
            suffixSum[i] = suffixSum[i + 1] + piles[i];
        }
        for (int i = 0; i <= piles.length; i++) {
            dp[i][piles.length] = suffixSum[i];
        }
        for (int i = piles.length - 1; i >= 0; i--) {
            for (int j = piles.length - 1; j >= 1; j--) {
                for (int k = 1; k <= 2 * j && i + k <= piles.length; k++) {
                    dp[i][j] = Math.max(dp[i][j], suffixSum[i] - dp[i + k][Math.max(j, k)]);
                }
            }
        }
        return dp[0][1];
    }
}