class Solution {
    public int minDays(int[] bloomDay, int m, int k) {
        int left = 0, right = Arrays.stream(bloomDay).max().getAsInt();
        int min = -1;
        while (left <= right) {
            int middle = left + (right - left) / 2;
            if (getBouquets(bloomDay, k, middle) >= m) {
                min = middle;
                right = middle - 1;
            } else {
                left = middle + 1;
            }
        }
        return min;
    }

    private int getBouquets(int[] bloomDay, int k, int middle) {
        int bouquets = 0, count = 0;
        for (int bloom : bloomDay) {
            if (bloom <= middle) {
                count++;
            } else {
                count = 0;
            }

            if (count == k) {
                bouquets++;
                count = 0;
            }
        }
        return bouquets;
    }
}